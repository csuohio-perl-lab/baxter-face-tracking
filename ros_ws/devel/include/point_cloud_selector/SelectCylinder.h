// Generated by gencpp from file point_cloud_selector/SelectCylinder.msg
// DO NOT EDIT!


#ifndef POINT_CLOUD_SELECTOR_MESSAGE_SELECTCYLINDER_H
#define POINT_CLOUD_SELECTOR_MESSAGE_SELECTCYLINDER_H

#include <ros/service_traits.h>


#include <point_cloud_selector/SelectCylinderRequest.h>
#include <point_cloud_selector/SelectCylinderResponse.h>


namespace point_cloud_selector
{

struct SelectCylinder
{

typedef SelectCylinderRequest Request;
typedef SelectCylinderResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SelectCylinder
} // namespace point_cloud_selector


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::point_cloud_selector::SelectCylinder > {
  static const char* value()
  {
    return "a4e3bfc9767a9507a2a420e39240fa88";
  }

  static const char* value(const ::point_cloud_selector::SelectCylinder&) { return value(); }
};

template<>
struct DataType< ::point_cloud_selector::SelectCylinder > {
  static const char* value()
  {
    return "point_cloud_selector/SelectCylinder";
  }

  static const char* value(const ::point_cloud_selector::SelectCylinder&) { return value(); }
};


// service_traits::MD5Sum< ::point_cloud_selector::SelectCylinderRequest> should match 
// service_traits::MD5Sum< ::point_cloud_selector::SelectCylinder > 
template<>
struct MD5Sum< ::point_cloud_selector::SelectCylinderRequest>
{
  static const char* value()
  {
    return MD5Sum< ::point_cloud_selector::SelectCylinder >::value();
  }
  static const char* value(const ::point_cloud_selector::SelectCylinderRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::point_cloud_selector::SelectCylinderRequest> should match 
// service_traits::DataType< ::point_cloud_selector::SelectCylinder > 
template<>
struct DataType< ::point_cloud_selector::SelectCylinderRequest>
{
  static const char* value()
  {
    return DataType< ::point_cloud_selector::SelectCylinder >::value();
  }
  static const char* value(const ::point_cloud_selector::SelectCylinderRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::point_cloud_selector::SelectCylinderResponse> should match 
// service_traits::MD5Sum< ::point_cloud_selector::SelectCylinder > 
template<>
struct MD5Sum< ::point_cloud_selector::SelectCylinderResponse>
{
  static const char* value()
  {
    return MD5Sum< ::point_cloud_selector::SelectCylinder >::value();
  }
  static const char* value(const ::point_cloud_selector::SelectCylinderResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::point_cloud_selector::SelectCylinderResponse> should match 
// service_traits::DataType< ::point_cloud_selector::SelectCylinder > 
template<>
struct DataType< ::point_cloud_selector::SelectCylinderResponse>
{
  static const char* value()
  {
    return DataType< ::point_cloud_selector::SelectCylinder >::value();
  }
  static const char* value(const ::point_cloud_selector::SelectCylinderResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // POINT_CLOUD_SELECTOR_MESSAGE_SELECTCYLINDER_H
